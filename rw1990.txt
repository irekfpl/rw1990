// Based on code from https://gist.github.com/swiftgeek/0ccfb7f87918b56b2259
// and good modification by https://gist.github.com/MagicLegend 
// swiftgeek base on https://danman.eu/blog/cloning-ibutton-using-rw1990-and-avr/
// and: http://elimelecsarduinoprojects.blogspot.com/2013/06/read-dallas-ibutton-arduino.html
// TODO: danger to atmega328! Use OpenCollector logic!
// Used 4.8kΩ Pull-up and 3.1 Vcc for arduino/pull-up
// By irekfpl 2021-02-01

// do zrobienia - pierwsze przyłożenie - czytamy, drugie przyłożenie zapis
// do zrobienia - obsługa wyświetlacza duży / mały (najlepiej mały)
// do zrobienia - zapis na kartę sd obsługiwanych breloków + czas obsługi




#include <OneWire.h>

#define pin 12


OneWire ibutton (pin); // I button connected on PIN 12.

byte addr[8]; //array to store the Ibutton ID.

void setup(){
 Serial.begin(9600); 
}

void loop(){
  if (!ibutton.search (addr)){//read attached ibutton and asign value to buffer
    ibutton.reset_search();
    delay(1000);
    return;
  }
 
//  Serial.print(millis()/1000);   //turned off because I did not like it
//  Serial.print("> ");       //turned off because I did not like it
  Serial.print("ID read> ");       
  for (int x = 8; x>0; x--){ int y = x-1; 
                      // buffer content in LSB (byte x = 0; x<8; x++) { Serial.print(addr[y],HEX);. 
                      // For MSB: for (int x = 8; x>0; x--) { int y = x-1; Serial.print(addr[y],HEX);
    Serial.print(addr[y],HEX); //print the buffer content 
//  Serial.print(" ");        //turned off because I did not like it
  }
 
  //compute crc//
  byte crc;
  crc = ibutton.crc8(addr, 7);
//  Serial.print(" CRC: "); Serial.println(crc,HEX); //not needed
  if ( Serial.read() == 'w' ){
    ibutton.skip();ibutton.reset();ibutton.write(0x33);
    Serial.print("  ID before write:");
    for (byte x=0; x<8; x++){
      Serial.print(' ');
      Serial.print(ibutton.read(), HEX);
    }
    // send reset
    ibutton.skip();
    ibutton.reset();
    // send 0xD1
    ibutton.write(0xD1);
    // send logical 0
    digitalWrite(pin, LOW); pinMode(pin, OUTPUT); delayMicroseconds(60);
    pinMode(pin, INPUT); digitalWrite(pin, HIGH); delay(10);
    
    Serial.print('\n');
    Serial.print("  Writing iButton ID:\n    ");
    // Hardcode here your desired ID //
    // 01 D5 9F DC 02 00 00 96
    byte newID[8] = {0x01, 0x8C, 0x06, 0x2B, 0x0E, 0x00, 0x00, 0x26};
                     
    ibutton.skip();
    ibutton.reset();
    ibutton.write(0xD5);
    for (byte x = 0; x<8; x++){
      writeByte(newID[x]);
      Serial.print(newID[x], HEX);
    }
    Serial.print('\n');
    ibutton.reset();
    // send 0xD1
    ibutton.write(0xD1);
    //send logical 1
    digitalWrite(pin, LOW); pinMode(pin, OUTPUT); delayMicroseconds(10);
    pinMode(pin, INPUT); digitalWrite(pin, HIGH); delay(10);

  }
} 

int writeByte(byte data){
  int data_bit;
  for(data_bit=0; data_bit<8; data_bit++){
    if (data & 1){
      digitalWrite(pin, LOW); pinMode(pin, OUTPUT);
      delayMicroseconds(60);
      pinMode(pin, INPUT); digitalWrite(pin, HIGH);
      delay(10);
    } else {
      digitalWrite(pin, LOW); pinMode(pin, OUTPUT);
      pinMode(pin, INPUT); digitalWrite(pin, HIGH);
      delay(10);
    }
    data = data >> 1;
  }
  return 0;
}